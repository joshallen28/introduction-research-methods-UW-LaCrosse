value = c("residential", "living_street",
"unclassified",
"service", "footway"
)) %>%
osmdata_sf()
railway = getbb("Atlanta United States")%>%
opq()%>%
add_osm_feature(key = "railway", value= "rail") %>%
osmdata_sf()
bars = tribble(
~name, ~address,
"Hattie B's", "299 Moreland Ave NE, Atlanta, GA 30307",
"Side Bar", "79 Poplar St NW, Atlanta, GA 30303",
"Manny's", "602 North Highland Avenue Northeast, Atlanta, GA 30307",
"The Porter", "1156 Euclid Ave NE, Atlanta, GA 30307",
"Anatolia's", "Peachtree St, Atlanta, GA 30303",
"Agave", "242 Boulevard SE, Atlanta, GA 30312",
"Fetch", "520 Daniel St SE, Atlanta, GA 30312",
"Recess", "99-V, Krog St NE, Atlanta, GA 30307",
"Der Biergarten", "300 Marietta St NW, Atlanta, GA 30313"
)
bars_geocode = bars %>%
geocode(address, method = "osm")
add_geom = bars_geocode %>%
st_as_sf(coords = c("long", "lat"), crs = st_crs("EPSG:4326"))
ggplot() +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
geom_sf(data = add_geom, aes(color = name),
color = "#0039A6") +
coord_sf(ylim = c(33.64, 33.89),
xlim = c (-84.56, -84.30), expand = FALSE) +
labs(title = "Atlanta", subtitle = "Restaurants and Bars Pols Students \n have had gone to for events", caption = "Dots are in GSU Blue") +
theme_void(base_family = "Roboto Condensed", base_size = 20) +
theme(plot.subtitle = element_text(size = 10, hjust = 0.5,
margin = margin(2, 0, 5, 0)),
plot.title = element_text(face="bold", hjust=.5),
plot.caption = element_text(size = 8))
pacman::p_load("kableExtra", "truncnorm", "broom")
n_people = 2500
grade_data = tibble(id = 1:n_people,
gpa =  rtruncnorm(n_people, mean = 3.5, sd = 1.0,
a = 1.5, b = 4.0)) %>%
mutate( gpa = round(gpa,2),
gre_base = rbeta(n_people, shape1 = 3, shape2 = 16),
gre_effect = 10.1*gpa ,
gre = gre_base + gre_effect + rnorm(n_people, mean = 150, sd = 3.5
),
gre =  round(gre,0),
math_score = (gre*-10.0) + (gpa*-2.0) + rnorm(n_people, mean = 0,
sd = 3),
math_probability = rescale(math_score, to = c(0.05,0.95)),
math_camp_num = rbinom(n_people, 1, math_probability),
math_camp = ifelse(math_camp_num == 1,TRUE,FALSE)) %>%
mutate(grade_base = rbeta(n_people, shape1 = 4, shape2 = 5 ) *100,
grade_effect = (15*gpa) + (2 * gre) + (10 * math_camp),
final_grade = grade_base + grade_effect + rnorm(n_people, 0, sd = 2),
final_grade = rescale(final_grade, to = c(0,100)),
final_grade = round(final_grade,1))
# For lm we need to feed it the data argument
naive_model = lm(final_grade ~ math_camp, data = grade_data)
tidy(naive_model)
adjusted_mod = lm(final_grade ~ math_camp + gre + gpa, data = grade_data)
tidy(adjusted_mod)
prop_model = glm(math_camp ~ gre + gpa, family = binomial(link = "logit"),
data = grade_data)
camp_probabilities = augment_columns(prop_model,
grade_data,
type.predict = "response") %>%
rename(propensity = .fitted)
camp_weights = camp_probabilities %>%
### To ensure that R doesn't do something weird with precedence lets wrap that
### in parenthesis
mutate(ipw = (math_camp/propensity) + (1 - math_camp)/(1-propensity))
ipw_model = lm(final_grade ~ math_camp, weights = ipw, data = camp_weights)
tidy(ipw_model)
modelsummary(list("Naive" = naive_model, "Confounders" = adjusted_mod,
"IPW" = ipw_model),
stars = TRUE ,
output = "kableExtra",
gof_omit = "IC|Log|F|Adj",
coef_map = c("math_campTRUE" = "Math Camp", "gre" = "GRE",
"gpa" = "GPA", "(Intercept)" = "Constant"),
title = "Effect of Math Camp on Final Grade \\label{tab:table1}") %>%
kable_styling(latex_options = "HOLD_position")
datasummary(gpa ~ Mean, data = grade_data)
datasummary(gpa + gre ~ Mean + SD,
data = grade_data)
pacman::p_load("tidyverse", "scales", "modelsummary", "kableExtra", "Manu",
"highr")
theme_allen = function(){
theme_minimal(base_family = "Roboto Condensed",
base_size = 14)  +
theme(axis.ticks = element_line(colour='black'),
plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = "dotted",
color = "#BBBBBB"),
legend.background = element_rect(color = "white"),
legend.title = element_text(face = "bold"),
legend.position = "bottom",
axis.title.x = element_text(margin = margin(t = 10), hjust = 0),
axis.title.y = element_text(margin = margin(r = 10), hjust = 1),
strip.background = element_rect(fill = "white", color = NA),
panel.border = element_rect(color = "grey90", fill = NA))
}
x = c(1, 3, 5, 6, 8)
print(x)
typeof(x)
z = c("a", "b", "c", "d", "e")
print(z)
typeof(z)
x = c(1, 3, 5, 6, 8)
x
class(x)
z = c("a", "b", "c", "d", "e")
z
class(z)
x2 = x*2
x2
x*2
summary(x)
install.packages(c("caret", "cpp11", "data.table", "datawizard", "desc", "diffobj", "digest", "fda", "fixest", "gert", "hms", "knitr", "lattice", "libcoin", "lifecycle", "maps", "matrixStats", "mgcv", "mime", "modelsummary", "party", "performance", "pillar", "plm", "progressr", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "rgdal", "s2", "shiny", "stringi", "taylor", "testthat", "TH.data", "tibble", "tidycensus", "tidymodels", "tidyr", "tidytext", "tigris", "tinytex", "TMB", "vars", "XML"))
install.packages(c("caret", "cpp11", "data.table", "datawizard", "desc", "diffobj", "digest", "fda", "fixest", "gert", "hms", "knitr", "lattice", "libcoin", "lifecycle", "maps", "matrixStats", "mgcv", "mime", "modelsummary", "party", "performance", "pillar", "plm", "progressr", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "rgdal", "s2", "shiny", "stringi", "taylor", "testthat", "TH.data", "tibble", "tidycensus", "tidymodels", "tidyr", "tidytext", "tigris", "tinytex", "TMB", "vars", "XML"))
install.packages(c("caret", "cpp11", "data.table", "datawizard", "desc", "diffobj", "digest", "fda", "fixest", "gert", "hms", "knitr", "lattice", "libcoin", "lifecycle", "maps", "matrixStats", "mgcv", "mime", "modelsummary", "party", "performance", "pillar", "plm", "progressr", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "rgdal", "s2", "shiny", "stringi", "taylor", "testthat", "TH.data", "tibble", "tidycensus", "tidymodels", "tidyr", "tidytext", "tigris", "tinytex", "TMB", "vars", "XML"))
missing_packages <- c(
"appendix", "babel-english", "babel-greek", "babel-latin",
"biber", "biblatex", "caption", "cbfonts-fd", "colortbl", "csquotes",
"enumitem", "environ", "eso-pic", "fancyhdr", "greek-fontenc",
"grfext", "hyphen-greek", "hyphen-latin", "lineno", "logreq",
"makecell", "microtype", "minitoc", "multirow", "notoccite",
"oberdiek", "pdflscape", "pdfpages", "quotchap", "soul", "tabu",
"threeparttable", "threeparttablex", "titlesec", "tocbibind",
"trimspaces", "ulem", "units", "utopia", "varwidth", "wrapfig",
"fvextra"
)
tinytex::tlmgr_install(missing_packages)
tlmgr update --self
q()
pacman::p_load("tidyverse", "scales", "modelsummary", "kableExtra", "Manu",
"highr")
theme_allen = function(){
theme_minimal(base_family = "Roboto Condensed",
base_size = 14)  +
theme(axis.ticks = element_line(colour='black'),
plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = "dotted",
color = "#BBBBBB"),
legend.background = element_rect(color = "white"),
legend.title = element_text(face = "bold"),
legend.position = "bottom",
axis.title.x = element_text(margin = margin(t = 10), hjust = 0),
axis.title.y = element_text(margin = margin(r = 10), hjust = 1),
strip.background = element_rect(fill = "white", color = NA),
panel.border = element_rect(color = "grey90", fill = NA))
}
hrbrthemes::import_roboto_condensed()
pacman::p_load("tidyverse", "scales", "modelsummary", "kableExtra", "Manu",
"highr")
theme_allen  = function(title_pos = "center", axis_title_pos = "left", slides = FALSE, has_subtitle = FALSE, base_size = 14, ...) {
# Check if fonts were loaded. If not, load them
if( !("Roboto Condensed" %in% sysfonts::font_families()) ) {
sysfonts::font_add_google("Roboto Condensed", "Roboto Condensed")
sysfonts::font_add_google("IBM Plex Sans", "IBM")
showtext::showtext_auto()
}
title_hjust <- switch(title_pos, "center" = 0.5, "left" = 0)
axis_title_hjust_y <- switch(axis_title_pos, "center" = 0.5, "left" = 1.0)
axis_title_hjust_x <- switch(axis_title_pos, "center" = 0.5, "left" = 0.0)
plot_bg = dplyr::if_else(slides, "#ECECEC", "transparent")
plot_grid = dplyr::if_else(slides, "grey85", "grey92")
title_margin = dplyr::if_else(has_subtitle, "4", "8")
# Fix problems with axis ticks getting huge with large fonts
if(base_size >= 20) {
check_base_size = 20
} else {
check_base_size = base_size
}
ggplot2::theme_bw(
base_size = check_base_size,
base_family = "Roboto Condensed"
) +
ggplot2::theme(
## Title and Subtitle --------------------------------------------------
plot.title = ggplot2::element_text(
# Font
family = "Roboto Condensed", face = "bold", size = 1.285 * base_size,
colour = "#454545",
# Center title
hjust = title_hjust,
# Margins
margin = ggplot2::margin(b = title_margin, unit = "pt")
),
plot.subtitle = ggplot2::element_text(
# Font
family = "IBM", face = "italic", size = .86 * base_size,
colour = "#454545",
# Center subtitle
hjust = title_hjust,
# Margins
margin = ggplot2::margin(b = 16, unit = "pt")
),
plot.title.position = "plot",
## Caption -------------------------------------------------------------
plot.caption = ggplot2::element_text(
# Font
size = 0.72 * base_size, colour = "#454545",
# Right-align caption
hjust = 1,
# Margins
margin = ggplot2::margin(t = 10)
),
plot.caption.position = "plot",
## Axis ----------------------------------------------------------------
# Axis title
axis.title = ggplot2::element_text(
# Font
size = .86 * base_size, colour = "#454545", face = "italic"
),
# Axis Title x/y
axis.title.y = ggplot2::element_text(
# Right-align y axis title
hjust = axis_title_hjust_y,
# Margins
margin = ggplot2::margin(r = 5)
),
axis.title.x = ggplot2::element_text(
# Left-align x axis title
hjust = axis_title_hjust_x,
# Margins
margin = ggplot2::margin(t = 5)
),
# Axis labels
axis.text = ggplot2::element_text(
# Font
size = .72 * base_size, colour = "#212121"
),
# Axis Lines
axis.line = ggplot2::element_line(
colour = "grey40"
),
panel.grid = ggplot2::element_line(
colour = plot_grid
),
## Legend -------------------------------------------------------------
# Legend title
legend.title = ggplot2::element_text(
# Font
size = .86 * base_size, colour = "#454545"
),
# Legend labels
legend.text = ggplot2::element_text(
# Font
size = .72 * base_size, colour = "#454545"
),
legend.background = ggplot2::element_rect(
# No Background Colour
fill = "transparent", colour = NA
),
legend.key = ggplot2::element_rect(
# No Background Colour
fill = "transparent", colour = NA
),
## Facet Wrap ----------------------------------------------------------
strip.text = ggplot2::element_text(
# Font
size = .86 * base_size, colour = "#454545",
# Margin
margin = ggplot2::margin(t= 10, b= 10)
),
strip.background = ggplot2::element_rect(
# No Background Colour
fill = "transparent", colour = NA
),
## Panel ---------------------------------------------------------------
panel.background = ggplot2::element_rect(
# No Background Colour
fill = plot_bg, colour = NA
),
panel.border = ggplot2::element_rect(
# No Background Colour
colour = NA
),
panel.spacing = grid::unit(8, "points"),
## Plot ----------------------------------------------------------------
plot.background = ggplot2::element_rect(
# No Background Colour
fill = plot_bg, colour = NA
),
plot.margin = ggplot2::margin(16, 16, 16, 16, unit = "pt")
) +
## Additional options passed by user ---------------------------------------
ggplot2::theme(
...
)}
pacman::p_load("tidyverse", "scales", "modelsummary", "kableExtra", "Manu",
"highr")
theme_allen  = function(title_pos = "center", axis_title_pos = "left", slides = FALSE, has_subtitle = FALSE, base_size = 14, ...) {
# Check if fonts were loaded. If not, load them
if( !("Roboto Condensed" %in% sysfonts::font_families()) ) {
sysfonts::font_add_google("Roboto Condensed", "Roboto Condensed")
sysfonts::font_add_google("IBM Plex Sans", "IBM")
showtext::showtext_auto()
}
title_hjust <- switch(title_pos, "center" = 0.5, "left" = 0)
axis_title_hjust_y <- switch(axis_title_pos, "center" = 0.5, "left" = 1.0)
axis_title_hjust_x <- switch(axis_title_pos, "center" = 0.5, "left" = 0.0)
plot_bg = dplyr::if_else(slides, "#ECECEC", "transparent")
plot_grid = dplyr::if_else(slides, "grey85", "grey92")
title_margin = dplyr::if_else(has_subtitle, "4", "8")
# Fix problems with axis ticks getting huge with large fonts
if(base_size >= 20) {
check_base_size = 20
} else {
check_base_size = base_size
}
ggplot2::theme_bw(
base_size = check_base_size,
base_family = "Roboto Condensed"
) +
ggplot2::theme(
## Title and Subtitle --------------------------------------------------
plot.title = ggplot2::element_text(
# Font
family = "Roboto Condensed", face = "bold", size = 1.285 * base_size,
colour = "#454545",
# Center title
hjust = title_hjust,
# Margins
margin = ggplot2::margin(b = title_margin, unit = "pt")
),
plot.subtitle = ggplot2::element_text(
# Font
family = "IBM", face = "italic", size = .86 * base_size,
colour = "#454545",
# Center subtitle
hjust = title_hjust,
# Margins
margin = ggplot2::margin(b = 16, unit = "pt")
),
plot.title.position = "plot",
## Caption -------------------------------------------------------------
plot.caption = ggplot2::element_text(
# Font
size = 0.72 * base_size, colour = "#454545",
# Right-align caption
hjust = 1,
# Margins
margin = ggplot2::margin(t = 10)
),
plot.caption.position = "plot",
## Axis ----------------------------------------------------------------
# Axis title
axis.title = ggplot2::element_text(
# Font
size = .86 * base_size, colour = "#454545", face = "italic"
),
# Axis Title x/y
axis.title.y = ggplot2::element_text(
# Right-align y axis title
hjust = axis_title_hjust_y,
# Margins
margin = ggplot2::margin(r = 5)
),
axis.title.x = ggplot2::element_text(
# Left-align x axis title
hjust = axis_title_hjust_x,
# Margins
margin = ggplot2::margin(t = 5)
),
# Axis labels
axis.text = ggplot2::element_text(
# Font
size = .72 * base_size, colour = "#212121"
),
# Axis Lines
axis.line = ggplot2::element_line(
colour = "grey40"
),
panel.grid = ggplot2::element_line(
colour = plot_grid
),
## Legend -------------------------------------------------------------
# Legend title
legend.title = ggplot2::element_text(
# Font
size = .86 * base_size, colour = "#454545"
),
# Legend labels
legend.text = ggplot2::element_text(
# Font
size = .72 * base_size, colour = "#454545"
),
legend.background = ggplot2::element_rect(
# No Background Colour
fill = "transparent", colour = NA
),
legend.key = ggplot2::element_rect(
# No Background Colour
fill = "transparent", colour = NA
),
## Facet Wrap ----------------------------------------------------------
strip.text = ggplot2::element_text(
# Font
size = .86 * base_size, colour = "#454545",
# Margin
margin = ggplot2::margin(t= 10, b= 10)
),
strip.background = ggplot2::element_rect(
# No Background Colour
fill = "transparent", colour = NA
),
## Panel ---------------------------------------------------------------
panel.background = ggplot2::element_rect(
# No Background Colour
fill = plot_bg, colour = NA
),
panel.border = ggplot2::element_rect(
# No Background Colour
colour = NA
),
panel.spacing = grid::unit(8, "points"),
## Plot ----------------------------------------------------------------
plot.background = ggplot2::element_rect(
# No Background Colour
fill = plot_bg, colour = NA
),
plot.margin = ggplot2::margin(16, 16, 16, 16, unit = "pt")
) +
## Additional options passed by user ---------------------------------------
ggplot2::theme(
...
)}
modelsummary(list("Naive" = naive_model, "Confounders" = adjusted_mod,
"IPW" = ipw_model),
stars = TRUE ,
output = "latex",
gof_omit = "IC|Log|F|Adj",
coef_map = c("math_campTRUE" = "Math Camp", "gre" = "GRE",
"gpa" = "GPA", "(Intercept)" = "Constant"),
title = "Effect of Math Camp on Final Grade \\label{tab:table1}") %>%
kable_styling(latex_options = "HOLD_position")
# For lm we need to feed it the data argument
naive_model = lm(final_grade ~ math_camp, data = grade_data)
pacman::p_load("kableExtra", "truncnorm", "broom")
n_people = 2500
grade_data = tibble(id = 1:n_people,
gpa =  rtruncnorm(n_people, mean = 3.5, sd = 1.0,
a = 1.5, b = 4.0)) %>%
mutate( gpa = round(gpa,2),
gre_base = rbeta(n_people, shape1 = 3, shape2 = 16),
gre_effect = 10.1*gpa ,
gre = gre_base + gre_effect + rnorm(n_people, mean = 150, sd = 3.5
),
gre =  round(gre,0),
math_score = (gre*-10.0) + (gpa*-2.0) + rnorm(n_people, mean = 0,
sd = 3),
math_probability = rescale(math_score, to = c(0.05,0.95)),
math_camp_num = rbinom(n_people, 1, math_probability),
math_camp = ifelse(math_camp_num == 1,TRUE,FALSE)) %>%
mutate(grade_base = rbeta(n_people, shape1 = 4, shape2 = 5 ) *100,
grade_effect = (15*gpa) + (2 * gre) + (10 * math_camp),
final_grade = grade_base + grade_effect + rnorm(n_people, 0, sd = 2),
final_grade = rescale(final_grade, to = c(0,100)),
final_grade = round(final_grade,1))
# For lm we need to feed it the data argument
naive_model = lm(final_grade ~ math_camp, data = grade_data)
tidy(naive_model)
adjusted_mod = lm(final_grade ~ math_camp + gre + gpa, data = grade_data)
tidy(adjusted_mod)
prop_model = glm(math_camp ~ gre + gpa, family = binomial(link = "logit"),
data = grade_data)
camp_probabilities = augment_columns(prop_model,
grade_data,
type.predict = "response") %>%
rename(propensity = .fitted)
camp_weights = camp_probabilities %>%
# To ensure that R doesn't do something weird with precedence lets wrap that
# in parenthesis
mutate(ipw = (math_camp/propensity) + (1 - math_camp)/(1-propensity))
ipw_model = lm(final_grade ~ math_camp, weights = ipw, data = camp_weights)
tidy(ipw_model)
modelsummary(list("Naive" = naive_model, "Confounders" = adjusted_mod,
"IPW" = ipw_model),
stars = TRUE ,
output = "latex",
gof_omit = "IC|Log|F|Adj",
coef_map = c("math_campTRUE" = "Math Camp", "gre" = "GRE",
"gpa" = "GPA", "(Intercept)" = "Constant"),
title = "Effect of Math Camp on Final Grade \\label{tab:table1}") %>%
kable_styling(latex_options = "HOLD_position")
tinytex::tlmgr_update()
